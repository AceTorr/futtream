# -*- coding: utf-8 -*-
# License: GPL (http://www.gnu.org/licenses/gpl-3.0.html)
# Gracias a la librería plugintools de Jesús (www.mimediacenter.info), PlatformCode y Core del Grupo Balandro (https://linktr.ee/balandro)

import os, sys, urllib, re, shutil, zipfile, base64
#import xbmc, xbmcgui, xbmcaddon, xbmcplugin, requests
import xbmc, xbmcgui, xbmcaddon, xbmcplugin
import locale, time, random, plugintools
import resolvers

if sys.version_info[0] < 3:
    import urllib2
else:
    import urllib.error as urllib2

from core import httptools
from core.item import Item
from platformcode.config import WebErrorException
from platformcode import platformtools

addonName           = xbmcaddon.Addon().getAddonInfo("name")
addonVersion        = xbmcaddon.Addon().getAddonInfo("version")
addonId             = xbmcaddon.Addon().getAddonInfo("id")
addonPath           = xbmcaddon.Addon().getAddonInfo("path")



	

# Punto de Entrada
def run():
	plugintools.log('[%s %s] Running %s... ' % (addonName, addonVersion, addonName))

	# Obteniendo parámetros...
	params = plugintools.get_params()
    
	
	if params.get("action") is None:
		main_list(params)
	else:
		action = params.get("action")
		exec(action+"(params)")
        

	plugintools.close_item_list()            



# Principal
def miDefault(params):
    
    l1 = "Este addon deja de estar en funcionamiento desde este momento."+"\n"
    l2 = "Ante la brutal persecución de las Plataformas, y no queriendo hacer un plugin ilegal,"+"\n"
    l3 = "los desarrolladores hemos decidido cancelar todos nuestros proyectos."
    mensaje = l1+l2+l3
    xbmcgui.Dialog().ok( "[COLOR lime]¡¡¡Gracias por todo!!![/COLOR]" , mensaje )
    
    xbmc.executebuiltin('ActivateWindow(10000,return)')








